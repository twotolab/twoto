import caurina.transitions.Equations;import caurina.transitions.properties.DisplayShortcuts;import caurina.transitions.Tweener;import mx.events.EventDispatcher;import mx.utils.Delegate;import BuildXML2Object;import Loading;class R56OneDTeaser extends MovieClip {		public var dispatchEvent:Function;	public var dispatchQueue:Function;	public var addEventListener:Function;	public var removeEventListener:Function;		private var mainXMLObj:Object;	private var mainXML:BuildXML2Object;		private var loading:Loading;	private var mainLoader:MovieClipLoader;	private var mask:MovieClip;			public function R56OneDTeaser(){	}		public function init(_xmlPath:String):Void {		EventDispatcher.initialize(this);				DisplayShortcuts.init();				Stage.scaleMode = "noScale";						//attach preloader 		loading = Loading(attachMovie("Loading","loading",10));		loading._x = 20;		loading._y = 20;				mainXML = new BuildXML2Object(_xmlPath);		mainXML.addEventListener("onBuildXML2ObjectReady", this);			}		public function onBuildXML2ObjectReady(evt:Object): Void{				mainXML.removeEventListener("onBuildXML2ObjectReady", this);		mainXMLObj = evt.xmlObj;				mainLoader = new MovieClipLoader();				this.onEnterFrame = function(){			var main_progress:Object = mainLoader.getProgress(this);			var percent:Number = Math.round((main_progress.bytesLoaded/main_progress.bytesTotal)*100);			if(percent > 1){				loading.setText(percent + "%");			}			if(percent == 100){				delete this.onEnterFrame;				loading.removeMovieClip();				buildTeaser();			}		}			}		private function buildTeaser(){				trace("------------> buildTeaser - MINIMALISM");				trace( " text: " + mainXMLObj.content.text[1].data)			}}