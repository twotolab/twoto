package com.bmw.serviceInclusive.loader{	  import flash.display.Sprite;	  import flash.events.Event;	  import flash.net.URLLoader;	  import flash.net.URLRequest;		  // Demonstrates the code required to load external XML	  public dynamic class XMLLoader extends Sprite {	    			    public var loadedXML:XML;	    private var urlLoader:URLLoader;		private var withComments:Boolean;		public static var XMLLOADED:String = "ready";						private var _currentXML:XML;	    	    // Constructor	    public function XMLLoader () {		    }		public function loadXML(_URL:String,_comments:Boolean):void {			withComments = _comments;	      // Specify the location of the external XML	      var urlRequest:URLRequest = new URLRequest(_URL);	      // Create an object that can load external text data	      urlLoader = new URLLoader();	      // Register to be notified when the XML finishes loading	      urlLoader.addEventListener(Event.COMPLETE, completeLoadedXMLlistener);	      // Load the XML	      urlLoader.load(urlRequest);				}	    private function completeLoadedXMLlistener(e:Event):void {	      // The string containing the loaded XML is stored in the URLLoader	      // object's data property (urlLoader.data). To create a new XML 	      // instance from that loaded string, we pass it to the XML constructor	     // loadedXML.ignoreComments = false;		  XML.ignoreComments = (withComments)?false:true;		 loadedXML = new XML(urlLoader.data);				_currentXML = loadedXML;		   dispatchEvent(new Event(XMLLoader.XMLLOADED));	   	 }    }} 